import numpy as np


class Layer:
    @staticmethod
    def cat(layers, axis=0):
        z0 = np.concatenate([layer.z0 for layer in layers], axis=axis)
        z1 = np.concatenate([layer.z1 for layer in layers], axis=axis)
        mu_a = np.concatenate([layer.mu_a for layer in layers], axis=axis)
        mu_s = np.concatenate([layer.mu_s for layer in layers], axis=axis)
        g = np.concatenate([layer.g for layer in layers], axis=axis)
        n = np.concatenate([layer.n for layer in layers], axis=axis)

        return Layer(z0, z1, mu_a, mu_s, g, n)

    @staticmethod
    def init(shape, float_dtype = np.float32):
        mu_a = np.zeros(shape, dtype=float_dtype)
        mu_s = np.zeros(shape, dtype=float_dtype)

        z0 = np.zeros(shape, dtype=float_dtype)
        z1 = np.zeros(shape, dtype=float_dtype)
        g = np.ones(shape, dtype=float_dtype)
        n = np.ones(shape, dtype=float_dtype)

        return Layer(z0, z1, mu_a, mu_s, g, n)

    @property
    def shape(self):
        return self.mu_a.shape

    def __init__(self, z0, z1, mu_a, mu_s, g, n):
        self.mu_a = mu_a
        self.mu_s = mu_s
        self.mu_t = mu_a + mu_s
        self.z0 = z0
        self.z1 = z1
        self.g = g
        self.n = n

    def __getitem__(self, item):
        return Layer(
            self.z0[item],
            self.z1[item],
            self.mu_a[item],
            self.mu_s[item],
            self.g[item],
            self.n[item]
        )


# def get_lambda_layers():
#     return [
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0001066910, 28.9045848846, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0003691410, 14.0044002533, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0451710112, 24.0245914459, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 1.1255861521, 3.4037511349, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.7277652025, 1.6491326094, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 1.1944216490, 2.8290920258, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 1.4552481174, 1.3389426470, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.9407979250, 0.6487236619, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 1.5198327303, 1.1128873825, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 1.0886323452, 0.2829236388, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.7038000226, 0.1370777637, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 1.0807988644, 0.2351573259, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.6534320116, 0.7251923084, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.4224886000, 0.3513588905, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.6488659382, 0.6027572155, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.3757185936, 0.7831987739, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.2429835200, 0.3794632852, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.3756093681, 0.6509703994, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.2426863760, 0.4920192361, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.1570241451, 0.2383855134, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.2462686896, 0.4089510739, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1766748130, 0.2870670259, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.1144037098, 0.1390852481, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1841207296, 0.2386011630, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1376836002, 0.1420124173, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0892981589, 0.0688056499, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1469914019, 0.1180362999, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1117594689, 0.0750041753, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0728034079, 0.0363398567, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1183581352, 0.0623411350, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0922716856, 0.0551402569, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0608322322, 0.0267156996, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0950275883, 0.0458308645, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0852496624, 0.0684207007, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0565004125, 0.0331501365, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0866410881, 0.0568691567, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0896484032, 0.1192668006, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0595196076, 0.0577852912, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0907014608, 0.0991308466, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0830463469, 0.2726781964, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0555316955, 0.1321137995, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0841778591, 0.2266416103, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0808540508, 0.5191136003, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0546011552, 0.2515128553, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0822355896, 0.4314710498, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0647670031, 0.6079112887, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0449689031, 0.2945357263, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0668223500, 0.5052769184, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0748962909, 0.4983689487, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0556151867, 0.2414619625, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0799866170, 0.4142287374, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1329429448, 0.3116891086, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0972960442, 0.1510147601, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1406090856, 0.2590662837, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.2565293312, 0.2752181292, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.1788557470, 0.1333444118, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.2641661167, 0.2287527472, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0848815441, 0.3531002700, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0668722391, 0.1710786372, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0936096534, 0.2934859395, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.0831103027, 0.3812351823, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.0640712008, 0.1847101450, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.0904869586, 0.3168708086, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1405937821, 0.5249060392, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.1032490134, 0.2543193102, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1488874108, 0.4362855554, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1494789422, 0.7602650523, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.1145816743, 0.3683517873, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1620937586, 0.6319085956, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.1414467096, 1.1306972504, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.1156273633, 0.5478278399, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.1590935737, 0.9398002625, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.3327527642, 1.8144668341, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.2440536022, 0.8791172504, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.3519507647, 1.5081282854, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.9256728888, 2.4690871239, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.6335228086, 1.1962836981, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.9428844452, 2.0522284508, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 2.1192150116, 2.5818710327, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 1.4263548851, 1.2509279251, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 2.1394104958, 2.1459705830, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 1.7745960951, 5.9831352234, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 1.2854272127, 2.8988556862, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 1.8635692596, 4.9729957581, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.4807226956, 8.6385250092, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.5280967951, 4.1854038239, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.6472933292, 7.1800727844, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.3583891988, 15.5166893005, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.4541993141, 7.5179052353, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.5304515362, 12.8969888687, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 0.5893254280, 37.9347991943, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.5672416091, 18.3795795441, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 0.7299838066, 31.5302257538, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 1.1299716234, 120.8738021851, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.8701208830, 58.5638961792, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 1.2274260521, 100.4665451050, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ]),
#         Layer.stack(5, [
#             Layer(0, 1, 0, 0, 1, 1),
#             Layer(1, 1.01, 1.4148478508, 5943.9443359375, 0.2870670259, 1.4786500931),
#             Layer(1.01, 1.825, 0.9973265529, 2879.8674316406, 0.1390852481, 1.2814999819),
#             Layer(1.825, 3.625, 1.4638892412, 4940.4213867188, 0.2386011630, 1.3638999462),
#             Layer(3.625, jnp.inf, 0, 0, 1, 1)
#         ])
#     ]
